{"leetcode":{"easy":0,"hard":0,"medium":2,"shas":{"0002-add-two-numbers":{"0002-add-two-numbers.py":"421c1c06edd58f7c6e7262eec942941220684dd3","README.md":"466f5e31bfeb151e70b5b325c379cf04183ebb57"},"0003-longest-substring-without-repeating-characters":{"0003-longest-substring-without-repeating-characters.py":"3abd5faaa0a7b2144cb6dad765ab5b109e247bcc","README.md":"76430b4ca3f89e9447aba0f80390214b0903c119"},"0057-insert-interval":{"0057-insert-interval.kt":"5e430caea6f8f784104c88c60d5d568b10303dc1","README.md":"137b7c209b5ee00b039fd51c5192db846507cca5"},"0925-construct-binary-tree-from-preorder-and-postorder-traversal":{"0925-construct-binary-tree-from-preorder-and-postorder-traversal.py":"b4bef440ea519ed30ff99850a43629c99a4ba55b","README.md":"be31bf390a70467103dd25c4054df5dcb6e1bfb3"},"1093-recover-a-tree-from-preorder-traversal":{"1093-recover-a-tree-from-preorder-traversal.py":"50bbe2e7dc16a552b11bff1a0e1053974dc0345c","README.md":"b70ae544747eef7effda85e53eeef3f8a9d5e9b1"},"2564-most-profitable-path-in-a-tree":{"2564-most-profitable-path-in-a-tree.py":"88183a830e2af37f3118b58cac2c09251e7eff14","README.md":"e56db6241b94a4f297e763b1b86a745d31513479","difficulty":"medium"},"README.md":{"":"ea3d3721d6f207f2efd2cfbee6d2bb03dec1793a"},"1631-number-of-sub-arrays-with-odd-sum":{"1631-number-of-sub-arrays-with-odd-sum.cpp":"f0399bed17ead59aee8ab8347e6122b4f71c967e","README.md":"2e2bb66730b657eb16248394f3e2794c8b40a50c","difficulty":"medium"},"stats.json":{"":"b3b4fcfb028b5eed5f91404083476a346592a253"}},"solved":2}}